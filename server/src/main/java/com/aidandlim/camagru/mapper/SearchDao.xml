<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aidandlim.camagru.dao.SearchDao">

    <select id="select" resultType="com.aidandlim.camagru.dto.Search">
        SELECT
            id as id,
            picture as picture,
            nickname as nickname,
            bio as bio,
            isPrivate as isPrivate,
            (SELECT COUNT(*) FROM post WHERE user_id = #{id}) as num_posts,
            (SELECT COUNT(*) FROM reflection as r LEFT JOIN post as p ON r.post_id = p.id WHERE p.user_id = #{id}) as num_likes,
            (SELECT COUNT(*) FROM comment as c LEFT JOIN post as p ON c.post_id = p.id WHERE p.user_id = #{id}) as num_comments
        FROM
            user
        WHERE
            id = #{id}
    </select>

    <select id="selectAllUserByKeyword" resultType="com.aidandlim.camagru.dto.User">
        SELECT
            id, email, nickname, bio, picture
        FROM
            user
        WHERE
            nickname LIKE #{keyword}
    </select>

    <select id="selectAllPostByKeyword" resultType="com.aidandlim.camagru.dto.Post">
        <![CDATA[
        SELECT
            p.id,
            p.picture,
            p.content,
            p.location,
            p.together,
            CASE
                WHEN p.time > DATE_ADD(NOW(), INTERVAL-1 HOUR) THEN CONCAT(MINUTE(TIMEDIFF(NOW(), p.time)), ' MINUTES AGO')
                WHEN p.time > DATE_ADD(NOW(), INTERVAL-24 HOUR) THEN CONCAT(HOUR(TIMEDIFF(NOW(), p.time)), ' HOURS AGO')
                ELSE CONCAT(DATEDIFF(NOW(), p.time), ' DAYS AGO') END as post_time,
            u.id as user_id,
            u.nickname as user_nickname,
            u.picture as user_picture,
            (SELECT COUNT(*) FROM reflection WHERE post_id = p.id) as num_likes,
            (SELECT COUNT(*) FROM comment WHERE post_id = p.id) as num_comments
        FROM
            post as p
        LEFT JOIN
            user as u
        ON
            p.user_id = u.id
        WHERE
            u.isPrivate = 0
            AND
            (
                u.nickname LIKE #{keyword}
                OR
                p.content LIKE #{keyword}
                OR
                p.location LIKE #{keyword}
                OR
                p.together LIKE #{keyword}
            )
        ORDER BY p.id DESC
        ]]>
    </select>

</mapper>